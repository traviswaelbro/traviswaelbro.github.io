<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Travis Waelbroeck</title>
    <link>https://traviswaelbro.github.io/</link>
    <description>Recent content on Travis Waelbroeck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://traviswaelbro.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Open Current File in Sublime Text from Vim</title>
      <link>https://traviswaelbro.github.io/blog/vim/snippets/open_current_file_in_sublime/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://traviswaelbro.github.io/blog/vim/snippets/open_current_file_in_sublime/</guid>
      <description>Sometimes, I just want to open the current file in Sublime Text for simplicity sake.
Usually, this is due to some automated commands I have in Vim, but not Sublime Text - like black which I might not want to run on certain legacy files.
This is a simple command, but one that I often forget and don&amp;rsquo;t see directly documented elsewhere online. So, here it is:
:!subl %:p  Breakdown:</description>
    </item>
    
    <item>
      <title>Reposition Screen after Jumping to a Mark</title>
      <link>https://traviswaelbro.github.io/blog/vim/snippets/reposition_screen_after_mark_jump/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://traviswaelbro.github.io/blog/vim/snippets/reposition_screen_after_mark_jump/</guid>
      <description>I&amp;rsquo;ve been using Marks more often lately to help me jump around files easily. The downside I&amp;rsquo;ve been finding is that it&amp;rsquo;s hard to tell where your cursor is after jumping to your mark (even though I&amp;rsquo;m using a highlighted cursor line).
As often happens with tech-related nuisances, I&amp;rsquo;m not the first one to notice this issue. This snippet comes courtesy of u/princker&amp;rsquo;s comment on a Reddit post titled, How to center screen after moving to a mark.</description>
    </item>
    
    <item>
      <title>Project-Level Searching in Vim</title>
      <link>https://traviswaelbro.github.io/blog/vim/search/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://traviswaelbro.github.io/blog/vim/search/</guid>
      <description>Basic searching in Vim is mostly straightforward once you spend a few minutes with it. It works quickly and easily - unless you need to search outside of the current file. Then the water gets a little muddier and there are a multitude of different recommendations from every corner of the internet. I&amp;rsquo;ve found a good workflow for managing my own project-level searches, but I still use a few different methods.</description>
    </item>
    
    <item>
      <title>Using pre-commit to Automate Git Hooks</title>
      <link>https://traviswaelbro.github.io/blog/pre-commit/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://traviswaelbro.github.io/blog/pre-commit/</guid>
      <description>What is pre-commit?  pre-commit is a framework for managing and maintaining multi-language pre-commit hooks.
 Basically, pre-commit is a Python package that provides a maintainable way to manage your git hooks. Git hooks allow you to run some code (or commands) on certain git events, such as before and after commits, before and after pushes, and more. Use it to automate validation, linting, and more to keep your codebase in check before things even hit the git server.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://traviswaelbro.github.io/blog/introduction/</link>
      <pubDate>Tue, 09 Oct 2018 23:17:59 -0500</pubDate>
      
      <guid>https://traviswaelbro.github.io/blog/introduction/</guid>
      <description>Welcome! I&amp;rsquo;m not sure why you&amp;rsquo;re here, but if you want to read about things I find interesting, then stick around!
I&amp;rsquo;m an Application Engineer at Blue Stingray, a software company in St. Louis, MO. I&amp;rsquo;ve been working on Odoo projects for about 3 years at this point, which is written in Python and XML. I&amp;rsquo;ve used Sublime Text most of my career, but I switched to Neovim full time earlier this year and I&amp;rsquo;m not looking back.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://traviswaelbro.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://traviswaelbro.github.io/contact/</guid>
      <description>This is an example of a custom shortcode that you can put right into your content. You will need to add a form action to the the shortcode to make it work. Check out Formspree for a simple, free form service.
Your Name Email Address An email address is required.  Message   </description>
    </item>
    
  </channel>
</rss>